{"ast":null,"code":"import React,{useRef,useState,useEffect}from'react';import*as ort from'onnxruntime-web';import{Box,Button,Typography,Paper}from'@mui/material';import{ref,uploadBytes}from'firebase/storage';import{storage}from'./firebase';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const canvasRef=useRef(null);const[isDrawing,setIsDrawing]=useState(false);const[predictions,setPredictions]=useState([]);const[session,setSession]=useState(null);useEffect(()=>{const loadModel=async()=>{try{const session=await ort.InferenceSession.create('/model.onnx');setSession(session);}catch(e){console.error('Failed to load model:',e);throw e;}};loadModel();},[]);const startDrawing=e=>{setIsDrawing(true);const canvas=canvasRef.current;const ctx=canvas===null||canvas===void 0?void 0:canvas.getContext('2d');if(ctx&&canvas){ctx.beginPath();ctx.moveTo(e.clientX-canvas.offsetLeft,e.clientY-canvas.offsetTop);}};const draw=e=>{if(!isDrawing)return;const canvas=canvasRef.current;const ctx=canvas===null||canvas===void 0?void 0:canvas.getContext('2d');if(ctx&&canvas){ctx.lineWidth=13;ctx.lineCap='round';ctx.lineTo(e.clientX-canvas.offsetLeft,e.clientY-canvas.offsetTop);ctx.stroke();}};const stopDrawing=()=>{setIsDrawing(false);};const clearCanvas=()=>{const canvas=canvasRef.current;const ctx=canvas===null||canvas===void 0?void 0:canvas.getContext('2d');if(ctx&&canvas){ctx.clearRect(0,0,canvas.width,canvas.height);setPredictions([]);}};const preprocessCanvas=canvas=>{// Create a temporary canvas for resizing\nconst tempCanvas=document.createElement('canvas');tempCanvas.width=28;tempCanvas.height=28;const tempCtx=tempCanvas.getContext('2d');if(!tempCtx)throw new Error('Could not get canvas context');// Draw the original canvas content onto the smaller canvas\ntempCtx.fillStyle='white';tempCtx.fillRect(0,0,28,28);tempCtx.drawImage(canvas,0,0,canvas.width,canvas.height,0,0,28,28);// Get image data and normalize\nconst imageData=tempCtx.getImageData(0,0,28,28);const data=new Float32Array(28*28);// Convert to grayscale and normalize to [-1, 1]\nfor(let i=0;i<imageData.data.length;i+=4){const grayscale=(imageData.data[i]+imageData.data[i+1]+imageData.data[i+2])/3;data[i/4]=(255-grayscale)/255*2-1;// Invert and normalize\n}return data;};const predict=async()=>{if(!session||!canvasRef.current)return;try{// Preprocess the canvas image\nconst data=preprocessCanvas(canvasRef.current);// Create tensor with correct shape [1, 1, 28, 28]\nconst inputTensor=new ort.Tensor('float32',data,[1,1,28,28]);// Run inference\nconst outputs=await session.run({input:inputTensor});// Get the output data\nconst outputData=outputs.output.data;// Convert to probabilities using softmax\nconst softmaxOutput=softmax(Array.from(outputData));// Create predictions array\nconst predictions=softmaxOutput.map((prob,index)=>({digit:index,probability:prob})).sort((a,b)=>b.probability-a.probability);setPredictions(predictions);}catch(error){console.error('Prediction error:',error);}};const saveImage=async()=>{if(!canvasRef.current)return;try{const blob=await new Promise(resolve=>canvasRef.current.toBlob(blob=>resolve(blob),'image/png'));const storageRef=ref(storage,`storagge/9_${Date.now()}.png`);await uploadBytes(storageRef,blob);console.log('Image saved successfully');}catch(error){console.error('Error saving image:',error);}};// Helper function for softmax\nconst softmax=arr=>{const max=Math.max(...arr);const exp=arr.map(x=>Math.exp(x-max));const sum=exp.reduce((a,b)=>a+b);return exp.map(x=>x/sum);};return/*#__PURE__*/_jsxs(Box,{sx:{p:3,maxWidth:800,mx:'auto'},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"MNIST Digit Classifier\"}),/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{p:2,mb:2},children:[/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,width:400,height:400,style:{border:'1px solid black'},onMouseDown:startDrawing,onMouseMove:draw,onMouseUp:stopDrawing,onMouseOut:stopDrawing}),/*#__PURE__*/_jsxs(Box,{sx:{mt:2},children:[/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:predict,sx:{mr:1},children:\"Predict\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:clearCanvas,children:\"Clear\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:saveImage,sx:{mr:1},color:\"secondary\",children:\"Save as 9\"})]})]}),predictions.length>0&&/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{p:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Predictions\"}),predictions.slice(0,3).map(_ref=>{let{digit,probability}=_ref;return/*#__PURE__*/_jsxs(Typography,{children:[\"Digit \",digit,\": \",(probability*100).toFixed(2),\"%\"]},digit);})]})]});};export default App;","map":{"version":3,"names":["React","useRef","useState","useEffect","ort","Box","Button","Typography","Paper","ref","uploadBytes","storage","jsx","_jsx","jsxs","_jsxs","App","canvasRef","isDrawing","setIsDrawing","predictions","setPredictions","session","setSession","loadModel","InferenceSession","create","e","console","error","startDrawing","canvas","current","ctx","getContext","beginPath","moveTo","clientX","offsetLeft","clientY","offsetTop","draw","lineWidth","lineCap","lineTo","stroke","stopDrawing","clearCanvas","clearRect","width","height","preprocessCanvas","tempCanvas","document","createElement","tempCtx","Error","fillStyle","fillRect","drawImage","imageData","getImageData","data","Float32Array","i","length","grayscale","predict","inputTensor","Tensor","outputs","run","input","outputData","output","softmaxOutput","softmax","Array","from","map","prob","index","digit","probability","sort","a","b","saveImage","blob","Promise","resolve","toBlob","storageRef","Date","now","log","arr","max","Math","exp","x","sum","reduce","sx","p","maxWidth","mx","children","variant","gutterBottom","elevation","mb","style","border","onMouseDown","onMouseMove","onMouseUp","onMouseOut","mt","onClick","mr","color","slice","_ref","toFixed"],"sources":["/Users/ventura/Desktop/EPFL/AI_Team/mist/mnistdeploytest/website/mnist-web/src/App.tsx"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport * as ort from 'onnxruntime-web';\nimport { Box, Button, Typography, Paper } from '@mui/material';\nimport { ref, uploadBytes } from 'firebase/storage';\nimport { storage } from './firebase';\n\ninterface Prediction {\n  digit: number;\n  probability: number;\n}\n\nconst App: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [predictions, setPredictions] = useState<Prediction[]>([]);\n  const [session, setSession] = useState<ort.InferenceSession | null>(null);\n\n  useEffect(() => {\n    const loadModel = async () => {\n      try {\n        const session = await ort.InferenceSession.create('/model.onnx');\n        setSession(session);\n      } catch (e) {\n        console.error('Failed to load model:', e);\n        throw e;\n      }\n    };\n    loadModel();\n  }, []);\n\n  const startDrawing = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    setIsDrawing(true);\n    const canvas = canvasRef.current;\n    const ctx = canvas?.getContext('2d');\n    if (ctx && canvas) {\n      ctx.beginPath();\n      ctx.moveTo(\n        e.clientX - canvas.offsetLeft,\n        e.clientY - canvas.offsetTop\n      );\n    }\n  };\n\n  const draw = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    if (!isDrawing) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas?.getContext('2d');\n    if (ctx && canvas) {\n      ctx.lineWidth = 13;\n      ctx.lineCap = 'round';\n      ctx.lineTo(\n        e.clientX - canvas.offsetLeft,\n        e.clientY - canvas.offsetTop\n      );\n      ctx.stroke();\n    }\n  };\n\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n\n  const clearCanvas = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas?.getContext('2d');\n    if (ctx && canvas) {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      setPredictions([]);\n    }\n  };\n\n  const preprocessCanvas = (canvas: HTMLCanvasElement): Float32Array => {\n    // Create a temporary canvas for resizing\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = 28;\n    tempCanvas.height = 28;\n    const tempCtx = tempCanvas.getContext('2d');\n    \n    if (!tempCtx) throw new Error('Could not get canvas context');\n    \n    // Draw the original canvas content onto the smaller canvas\n    tempCtx.fillStyle = 'white';\n    tempCtx.fillRect(0, 0, 28, 28);\n    tempCtx.drawImage(canvas, 0, 0, canvas.width, canvas.height, 0, 0, 28, 28);\n    \n    // Get image data and normalize\n    const imageData = tempCtx.getImageData(0, 0, 28, 28);\n    const data = new Float32Array(28 * 28);\n    \n    // Convert to grayscale and normalize to [-1, 1]\n    for (let i = 0; i < imageData.data.length; i += 4) {\n      const grayscale = (imageData.data[i] + imageData.data[i + 1] + imageData.data[i + 2]) / 3;\n      data[i / 4] = (255 - grayscale) / 255 * 2 - 1; // Invert and normalize\n    }\n    \n    return data;\n  };\n\n  const predict = async () => {\n    if (!session || !canvasRef.current) return;\n    \n    try {\n      // Preprocess the canvas image\n      const data = preprocessCanvas(canvasRef.current);\n      \n      // Create tensor with correct shape [1, 1, 28, 28]\n      const inputTensor = new ort.Tensor('float32', data, [1, 1, 28, 28]);\n      \n      // Run inference\n      const outputs = await session.run({\n        input: inputTensor\n      });\n      \n      // Get the output data\n      const outputData = outputs.output.data as Float32Array;\n      \n      // Convert to probabilities using softmax\n      const softmaxOutput = softmax(Array.from(outputData));\n      \n      // Create predictions array\n      const predictions = softmaxOutput.map((prob, index) => ({\n        digit: index,\n        probability: prob\n      })).sort((a, b) => b.probability - a.probability);\n      \n      setPredictions(predictions);\n    } catch (error) {\n      console.error('Prediction error:', error);\n    }\n  };\n\n  const saveImage = async () => {\n    if (!canvasRef.current) return;\n\n    try {\n      const blob = await new Promise<Blob>((resolve) =>\n        canvasRef.current!.toBlob(blob => resolve(blob!), 'image/png')\n      );\n\n      const storageRef = ref(storage, `storagge/9_${Date.now()}.png`);\n      await uploadBytes(storageRef, blob);\n      console.log('Image saved successfully');\n    } catch (error) {\n      console.error('Error saving image:', error);\n    }\n  };\n\n  // Helper function for softmax\n  const softmax = (arr: number[]): number[] => {\n    const max = Math.max(...arr);\n    const exp = arr.map(x => Math.exp(x - max));\n    const sum = exp.reduce((a, b) => a + b);\n    return exp.map(x => x / sum);\n  };\n\n  return (\n    <Box sx={{ p: 3, maxWidth: 800, mx: 'auto' }}>\n      <Typography variant=\"h4\" gutterBottom>\n        MNIST Digit Classifier\n      </Typography>\n      \n      <Paper elevation={3} sx={{ p: 2, mb: 2 }}>\n        <canvas\n          ref={canvasRef}\n          width={400}\n          height={400}\n          style={{ border: '1px solid black' }}\n          onMouseDown={startDrawing}\n          onMouseMove={draw}\n          onMouseUp={stopDrawing}\n          onMouseOut={stopDrawing}\n        />\n        \n        <Box sx={{ mt: 2 }}>\n          <Button variant=\"contained\" onClick={predict} sx={{ mr: 1 }}>\n            Predict\n          </Button>\n          <Button variant=\"outlined\" onClick={clearCanvas}>\n            Clear\n          </Button>\n          <Button\n            variant=\"contained\"\n            onClick={saveImage}\n            sx = {{mr : 1}}\n            color=\"secondary\">\n            Save as 9\n          </Button>\n        </Box>\n      </Paper>\n\n      {predictions.length > 0 && (\n        <Paper elevation={3} sx={{ p: 2 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Predictions\n          </Typography>\n          {predictions.slice(0, 3).map(({ digit, probability }) => (\n            <Typography key={digit}>\n              Digit {digit}: {(probability * 100).toFixed(2)}%\n            </Typography>\n          ))}\n        </Paper>\n      )}\n    </Box>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}